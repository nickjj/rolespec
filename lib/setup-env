#!/bin/bash

# setup-env: Set up the test environment
# Copyright (C) 2014 Nick Janetakis <nick.janetakis@gmail.com>


enforce_arguments() {
  if [[ -z "${ROLESPEC_TRAVIS}" && -z "${ROLESPEC_ROLE_SOURCE}" ]]; then
    error "A suitable role was not found, try running 'rolespec -h' for help"
  fi
}

enforce_rolespec_directory() {
  # Exit if we are outside of a RoleSpec working directory
  if [[ -z "${ROLESPEC_RUNTIME}" ]]; then
    error "Not a RoleSpec working directory"
  fi
}

enforce_test_exists() {
  if [ ! -f "${ROLESPEC_SCRIPT}" ]; then
    error "Test script not found:\n${ROLESPEC_SCRIPT}\n"
  fi
}

clone_url() {
  if [[ -n "${ROLESPEC_TRAVIS}" ]]; then
    rolespec_run "Git clone ${ROLESPEC_ROLE_SOURCE}"

    # Avoid clone path conflicts
    if [[ -d "${ROLESPEC_TRAVIS_TESTS}" ]]; then
      rm -rf "${ROLESPEC_TRAVIS_TESTS}"
      mkdir -p "${ROLESPEC_TRAVIS_TESTS}"
    fi

    git clone --depth 1 "${ROLESPEC_ROLE_SOURCE}" "${ROLESPEC_TRAVIS_TESTS}"
    echo
  fi
}

inject_placeholders() {
  local playbook_directory="$(dirname "${ROLESPEC_PLAYBOOK}")"

  if [ ! -d "${playbook_directory}" ]; then
    mkdir -p "${playbook_directory}"
  fi

  # Replace the placeholder fqdn in the hosts file
  sed -i "s/placeholder_fqdn/${ROLESPEC_FQDN}/g" "${ROLESPEC_HOSTS}"

  local playbook_content="$(cat <<EOF
---

- hosts: '${ROLESPEC_FQDN}'
  become: True

  roles:
    - role: '${ROLESPEC_ROLE}'
EOF
)"

  # Only create a playbook file if it doesn't exist
  if [ -f "${ROLESPEC_PLAYBOOK}" ]; then

    # Replace the placeholder fqdn in the custom playbook
    sed -i "s/placeholder_fqdn/${ROLESPEC_FQDN}/g" "${ROLESPEC_PLAYBOOK}"

    ROLESPEC_PLAYBOOK_CUSTOM=true
  else
    echo "${playbook_content}" > "${ROLESPEC_PLAYBOOK}"
  fi
}

find_linux_distribution() {
  distro=`awk '/^NAME=/' /etc/*-release | sed 's/NAME=//' | tr '[:upper:]' '[:lower:]'`
  echo $distro
}

update_system() {
  distro=$(find_linux_distribution)
echo $distro
  case "$distro" in
    *"amazon linux ami"*|*"RedHat Enterprise Linux Server"*|*"CentOS Linux"*)
      sudo yum update -q -y 
      ;;
    *"Debian GNU/Linux"*)
      sudo apt-get -qq update
      ;;
    *)
      echo "unsupported distribution ($distro)"
      exit 1
  esac
}

run_common_tasks() {
  if [[ -z "${ROLESPEC_TURBO_MODE}" ]]; then
    distro=$(find_linux_distribution)
    case "$distro" in
      *"amazon linux ami"*|*"RedHat Enterprise Linux Server"*|*"CentOS Linux"*)
        local update_file="/var/lib/yum/rpmdb-indexes/version"
        ;;
      *"Debian GNU/Linux"*)
        local update_file="/var/lib/apt/periodic/update-stamp"
        ;;
      *)
        echo "unsupported distribution ($distro)"
        exit 1
    esac

    # Only run system update when it is stale
    local now_epoch="$(date "+%s")"
    local last_update_epoch time_difference
    if [[ -f "${update_file}" ]]; then
	last_update_epoch=$(stat -c %Y ${update_file})
    else
	last_update_epoch=$(stat -c %Y /var/lib/apt/lists/* | sort -nr | head -1)
    fi
    if [ -n "$last_update_epoch" ] ; then
	time_difference=$((now_epoch - last_update_epoch))
    else
	time_difference=999999
    fi

    if [[ ${time_difference} -gt 86400 ]]; then
      rolespec_run "Run system update silently"
      update_system
    fi

    rolespec_run "Create SSH key/pair and add ourselves to the known hosts"
    if [ ! -f  ~/.ssh/id_rsa ] ; then
	echo -e "y\n" | ssh-keygen -t rsa -P "" -f ~/.ssh/id_rsa
    fi
    ssh-keyscan "${ROLESPEC_FQDN}" >> ~/.ssh/known_hosts

    rolespec_run "Set git user and email globally"
    git config --global user.email "test@user.com" && git config --global user.name "Hi"
    echo -e "test@user.com => Hi\n"
  fi
}

presetup() {
  enforce_arguments
  enforce_rolespec_directory

  if [[ -n "$ROLESPEC_TRAVIS" ]]; then
    clone_url
  else
    enforce_test_exists
  fi
}

setup() {
  rolespec_run "Running tests on ${ROLESPEC_ROLE}"

  inject_placeholders
  run_common_tasks
}

teardown() {
  # Replace the real fqdn back to the placeholder fqdn
  sed -i "s/${ROLESPEC_FQDN}/placeholder_fqdn/g" "${ROLESPEC_HOSTS}"

  # Always delete the playbook, unless it's custom
  if [[ -z "${ROLESPEC_PLAYBOOK_CUSTOM}" ]]; then
    rm -rf "${ROLESPEC_PLAYBOOK}"
  fi

  if [[ -z "${ROLESPEC_TURBO_MODE}" ]]; then
    rm -rf "${ROLESPEC_ANSIBLE_CONFIG}"
  fi
}
